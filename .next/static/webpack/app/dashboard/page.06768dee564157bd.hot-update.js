"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/data/users.json":
/*!*****************************!*\
  !*** ./src/data/users.json ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = /*#__PURE__*/JSON.parse('{"users":[{"id":"107178","handle":"user_infinitetap_stg","email":"user_infinitetap_stg@example.com","phone":"11999999999","cpf":"123.456.789-00","pix":"user_infinitetap_stg@example.com"},{"id":"123456","handle":"another_user","email":"another_user@example.com","phone":"11988888888","cpf":"987.654.321-00","pix":"another_user@example.com"}]}');

/***/ }),

/***/ "(app-pages-browser)/./src/services/api.ts":
/*!*****************************!*\
  !*** ./src/services/api.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: () => (/* binding */ api)\n/* harmony export */ });\n/* harmony import */ var _userDb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userDb */ \"(app-pages-browser)/./src/services/userDb.ts\");\n\nconst API_BASE_URL = 'https://qe-api.services.staging.cloudwalk.network';\nconst api = {\n    async getBalance (userId) {\n        console.log('API: Buscando saldo para userId:', userId);\n        try {\n            const response = await fetch(\"\".concat(API_BASE_URL, \"/users/\").concat(userId), {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            if (!response.ok) {\n                console.error('API: Erro ao buscar saldo:', response.status, response.statusText);\n                throw new Error('Failed to fetch balance');\n            }\n            const data = await response.json();\n            console.log('API: Saldo obtido:', data);\n            return data.balance;\n        } catch (error) {\n            console.error('API: Erro na chamada getBalance:', error);\n            throw error;\n        }\n    },\n    async setBalance (data) {\n        console.log('API: Atualizando saldo:', data);\n        try {\n            const response = await fetch(\"\".concat(API_BASE_URL, \"/users/set-balance\"), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            });\n            if (!response.ok) {\n                console.error('API: Erro ao atualizar saldo:', response.status, response.statusText);\n                throw new Error('Failed to set balance');\n            }\n            const result = await response.json();\n            console.log('API: Saldo atualizado com sucesso:', result);\n            return result;\n        } catch (error) {\n            console.error('API: Erro na chamada setBalance:', error);\n            throw error;\n        }\n    },\n    async updateBalancesAfterTransaction (senderId, receiverId, amount) {\n        console.log('API: Iniciando atualização de saldos:', {\n            senderId,\n            receiverId,\n            amount\n        });\n        try {\n            // Get current balances\n            const senderBalance = await this.getBalance(senderId);\n            const receiverBalance = await this.getBalance(receiverId);\n            console.log('API: Saldos atuais:', {\n                senderBalance,\n                receiverBalance\n            });\n            // Update sender's balance (subtract amount)\n            const newSenderBalance = senderBalance - amount;\n            await this.setBalance({\n                user_id: senderId,\n                balance: newSenderBalance\n            });\n            // Update receiver's balance (add amount)\n            await this.setBalance({\n                user_id: receiverId,\n                balance: receiverBalance + amount\n            });\n            // Return updated balances\n            const updatedSenderBalance = await this.getBalance(senderId);\n            const updatedReceiverBalance = await this.getBalance(receiverId);\n            console.log('API: Saldos atualizados:', {\n                updatedSenderBalance,\n                updatedReceiverBalance\n            });\n            return {\n                senderBalance: updatedSenderBalance,\n                receiverBalance: updatedReceiverBalance\n            };\n        } catch (error) {\n            console.error('API: Erro ao atualizar saldos:', error);\n            throw error;\n        }\n    },\n    async transferMoney (data) {\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/pay/pos\"), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            throw new Error('Transfer failed');\n        }\n        return response.json();\n    },\n    async transferPix (data) {\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/pay/pix\"), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            throw new Error('PIX transfer failed');\n        }\n        return response.json();\n    },\n    async payLink (data) {\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/pay/link\"), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            throw new Error('Link payment failed');\n        }\n        return response.json();\n    },\n    async cardPayment (data) {\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/pay/card\"), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            throw new Error('Card payment failed');\n        }\n        return response.json();\n    },\n    async createReceivable (data) {\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/receivables\"), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n            throw new Error('Failed to create receivable');\n        }\n        return response.json();\n    },\n    async getUserInfo (identifier) {\n        // Primeiro, tenta encontrar no banco local\n        const localUser = _userDb__WEBPACK_IMPORTED_MODULE_0__.userDb.getUserByIdentifier(identifier);\n        if (localUser) {\n            console.log('Usuário encontrado no banco local:', localUser);\n            try {\n                // Busca os detalhes completos (incluindo saldo) da API usando o ID\n                const response = await fetch(\"\".concat(API_BASE_URL, \"/users/\").concat(localUser.id), {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n                if (!response.ok) {\n                    console.warn(\"Failed to get user details from API for ID \".concat(localUser.id, \", falling back to direct API search\"));\n                } else {\n                    return response.json();\n                }\n            } catch (error) {\n                console.warn('Error fetching user details from API, falling back to direct API search:', error);\n            }\n        }\n        // Se não encontrou no banco local ou falhou ao buscar detalhes, tenta a API diretamente\n        // Se for um número, usa o endpoint /users/{id}\n        if (!isNaN(Number(identifier))) {\n            const response = await fetch(\"\".concat(API_BASE_URL, \"/users/\").concat(identifier), {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            if (!response.ok) {\n                throw new Error('Failed to get user info');\n            }\n            return response.json();\n        }\n        // Se não for número, primeiro busca o ID usando /users/search\n        const searchResponse = await fetch(\"\".concat(API_BASE_URL, \"/users/search?query=\").concat(encodeURIComponent(identifier)), {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        if (!searchResponse.ok) {\n            throw new Error('Failed to search user');\n        }\n        const searchData = await searchResponse.json();\n        console.log('Resposta da busca de usuário:', searchData);\n        let userId;\n        // Se retornar array, pega o primeiro usuário com id\n        if (Array.isArray(searchData) && searchData.length > 0 && searchData[0].id) {\n            userId = searchData[0].id;\n        } else if (searchData && searchData.id) {\n            userId = searchData.id;\n        } else {\n            throw new Error('Usuário não encontrado');\n        }\n        // Agora busca os detalhes completos usando o ID\n        const userResponse = await fetch(\"\".concat(API_BASE_URL, \"/users/\").concat(userId), {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        if (!userResponse.ok) {\n            throw new Error('Failed to get user details');\n        }\n        return userResponse.json();\n    },\n    async createUser (data) {\n        try {\n            const response = await fetch('https://qe-api.services.staging.cloudwalk.network/users/new', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            });\n            const res = await response.json();\n            // Se o handle já existe, tenta criar com um sufixo aleatório\n            if (res.error && res.error.includes('handle has already been taken')) {\n                const newHandle = \"\".concat(data.handle).concat(Math.floor(Math.random() * 1000));\n                return this.createUser({\n                    handle: newHandle\n                });\n            }\n            if (!response.ok) {\n                console.error('Erro ao criar usuário:', res);\n                throw new Error(res.message || 'Erro ao criar usuário');\n            }\n            return res;\n        } catch (err) {\n            console.error('Erro de rede ao criar usuário:', err);\n            throw err;\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/api.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/services/userDb.ts":
/*!********************************!*\
  !*** ./src/services/userDb.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   userDb: () => (/* binding */ userDb)\n/* harmony export */ });\n/* harmony import */ var _data_users_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/users.json */ \"(app-pages-browser)/./src/data/users.json\");\n\nclass UserDbService {\n    getUserById(id) {\n        return this.users.find((user)=>user.id === id) || null;\n    }\n    getUserByHandle(handle) {\n        return this.users.find((user)=>user.handle === handle) || null;\n    }\n    getUserByIdentifier(identifier) {\n        // Try to find by handle first\n        const byHandle = this.getUserByHandle(identifier);\n        if (byHandle) return byHandle;\n        // Try to find by ID\n        const byId = this.getUserById(identifier);\n        if (byId) return byId;\n        // Try to find by other fields\n        return this.users.find((user)=>user.email === identifier || user.phone === identifier || user.cpf === identifier || user.pix === identifier) || null;\n    }\n    getAllUsers() {\n        return this.users;\n    }\n    constructor(){\n        this.users = _data_users_json__WEBPACK_IMPORTED_MODULE_0__.users;\n        console.log(\"Loaded \".concat(this.users.length, \" users from JSON\"));\n    }\n}\nconst userDb = new UserDbService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy91c2VyRGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkM7QUFXM0MsTUFBTUM7SUFRSkMsWUFBWUMsRUFBVSxFQUFlO1FBQ25DLE9BQU8sSUFBSSxDQUFDQyxLQUFLLENBQUNDLElBQUksQ0FBQ0MsQ0FBQUEsT0FBUUEsS0FBS0gsRUFBRSxLQUFLQSxPQUFPO0lBQ3BEO0lBRUFJLGdCQUFnQkMsTUFBYyxFQUFlO1FBQzNDLE9BQU8sSUFBSSxDQUFDSixLQUFLLENBQUNDLElBQUksQ0FBQ0MsQ0FBQUEsT0FBUUEsS0FBS0UsTUFBTSxLQUFLQSxXQUFXO0lBQzVEO0lBRUFDLG9CQUFvQkMsVUFBa0IsRUFBZTtRQUNuRCw4QkFBOEI7UUFDOUIsTUFBTUMsV0FBVyxJQUFJLENBQUNKLGVBQWUsQ0FBQ0c7UUFDdEMsSUFBSUMsVUFBVSxPQUFPQTtRQUVyQixvQkFBb0I7UUFDcEIsTUFBTUMsT0FBTyxJQUFJLENBQUNWLFdBQVcsQ0FBQ1E7UUFDOUIsSUFBSUUsTUFBTSxPQUFPQTtRQUVqQiw4QkFBOEI7UUFDOUIsT0FBTyxJQUFJLENBQUNSLEtBQUssQ0FBQ0MsSUFBSSxDQUFDQyxDQUFBQSxPQUNyQkEsS0FBS08sS0FBSyxLQUFLSCxjQUNmSixLQUFLUSxLQUFLLEtBQUtKLGNBQ2ZKLEtBQUtTLEdBQUcsS0FBS0wsY0FDYkosS0FBS1UsR0FBRyxLQUFLTixlQUNWO0lBQ1A7SUFFQU8sY0FBc0I7UUFDcEIsT0FBTyxJQUFJLENBQUNiLEtBQUs7SUFDbkI7SUFqQ0FjLGFBQWM7UUFDWixJQUFJLENBQUNkLEtBQUssR0FBR0osbURBQWU7UUFDNUJtQixRQUFRQyxHQUFHLENBQUMsVUFBNEIsT0FBbEIsSUFBSSxDQUFDaEIsS0FBSyxDQUFDaUIsTUFBTSxFQUFDO0lBQzFDO0FBK0JGO0FBRU8sTUFBTUMsU0FBUyxJQUFJckIsZ0JBQWdCIiwic291cmNlcyI6WyIvVXNlcnMvY2xhcmFyaWJlaXJvL0dJVFMvUUUgLSBDaGFsbGVuZ2Uvc3JjL3NlcnZpY2VzL3VzZXJEYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlcnNEYXRhIGZyb20gJy4uL2RhdGEvdXNlcnMuanNvbic7XG5cbmludGVyZmFjZSBVc2VyIHtcbiAgaWQ6IHN0cmluZztcbiAgaGFuZGxlOiBzdHJpbmc7XG4gIGVtYWlsPzogc3RyaW5nO1xuICBwaG9uZT86IHN0cmluZztcbiAgY3BmPzogc3RyaW5nO1xuICBwaXg/OiBzdHJpbmc7XG59XG5cbmNsYXNzIFVzZXJEYlNlcnZpY2Uge1xuICBwcml2YXRlIHVzZXJzOiBVc2VyW107XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy51c2VycyA9IHVzZXJzRGF0YS51c2VycztcbiAgICBjb25zb2xlLmxvZyhgTG9hZGVkICR7dGhpcy51c2Vycy5sZW5ndGh9IHVzZXJzIGZyb20gSlNPTmApO1xuICB9XG5cbiAgZ2V0VXNlckJ5SWQoaWQ6IHN0cmluZyk6IFVzZXIgfCBudWxsIHtcbiAgICByZXR1cm4gdGhpcy51c2Vycy5maW5kKHVzZXIgPT4gdXNlci5pZCA9PT0gaWQpIHx8IG51bGw7XG4gIH1cblxuICBnZXRVc2VyQnlIYW5kbGUoaGFuZGxlOiBzdHJpbmcpOiBVc2VyIHwgbnVsbCB7XG4gICAgcmV0dXJuIHRoaXMudXNlcnMuZmluZCh1c2VyID0+IHVzZXIuaGFuZGxlID09PSBoYW5kbGUpIHx8IG51bGw7XG4gIH1cblxuICBnZXRVc2VyQnlJZGVudGlmaWVyKGlkZW50aWZpZXI6IHN0cmluZyk6IFVzZXIgfCBudWxsIHtcbiAgICAvLyBUcnkgdG8gZmluZCBieSBoYW5kbGUgZmlyc3RcbiAgICBjb25zdCBieUhhbmRsZSA9IHRoaXMuZ2V0VXNlckJ5SGFuZGxlKGlkZW50aWZpZXIpO1xuICAgIGlmIChieUhhbmRsZSkgcmV0dXJuIGJ5SGFuZGxlO1xuXG4gICAgLy8gVHJ5IHRvIGZpbmQgYnkgSURcbiAgICBjb25zdCBieUlkID0gdGhpcy5nZXRVc2VyQnlJZChpZGVudGlmaWVyKTtcbiAgICBpZiAoYnlJZCkgcmV0dXJuIGJ5SWQ7XG5cbiAgICAvLyBUcnkgdG8gZmluZCBieSBvdGhlciBmaWVsZHNcbiAgICByZXR1cm4gdGhpcy51c2Vycy5maW5kKHVzZXIgPT4gXG4gICAgICB1c2VyLmVtYWlsID09PSBpZGVudGlmaWVyIHx8XG4gICAgICB1c2VyLnBob25lID09PSBpZGVudGlmaWVyIHx8XG4gICAgICB1c2VyLmNwZiA9PT0gaWRlbnRpZmllciB8fFxuICAgICAgdXNlci5waXggPT09IGlkZW50aWZpZXJcbiAgICApIHx8IG51bGw7XG4gIH1cblxuICBnZXRBbGxVc2VycygpOiBVc2VyW10ge1xuICAgIHJldHVybiB0aGlzLnVzZXJzO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCB1c2VyRGIgPSBuZXcgVXNlckRiU2VydmljZSgpOyAiXSwibmFtZXMiOlsidXNlcnNEYXRhIiwiVXNlckRiU2VydmljZSIsImdldFVzZXJCeUlkIiwiaWQiLCJ1c2VycyIsImZpbmQiLCJ1c2VyIiwiZ2V0VXNlckJ5SGFuZGxlIiwiaGFuZGxlIiwiZ2V0VXNlckJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJieUhhbmRsZSIsImJ5SWQiLCJlbWFpbCIsInBob25lIiwiY3BmIiwicGl4IiwiZ2V0QWxsVXNlcnMiLCJjb25zdHJ1Y3RvciIsImNvbnNvbGUiLCJsb2ciLCJsZW5ndGgiLCJ1c2VyRGIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/userDb.ts\n"));

/***/ })

});